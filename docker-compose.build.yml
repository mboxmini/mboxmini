version: '3.8'

services:
  ui:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_PORT=8080
    depends_on:
      api:
        condition: service_healthy

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/minecraft-data:/minecraft-data
      - ${PWD}/data:/app/data
    environment:
      - API_KEY=${API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - DATA_PATH=/minecraft-data
      - DB_PATH=/app/data/mboxmini.db
      - NODE_ENV=${NODE_ENV:-development}
      - HOST_DATA_PATH=${PWD}/minecraft-data
      - MINECRAFT_DATA_PATH=/minecraft-data
    command: >
      sh -c "
        echo '=== Debug Info ===' &&
        echo 'PWD:' $PWD &&
        echo 'HOST_DATA_PATH:' $HOST_DATA_PATH &&
        echo 'DATA_PATH:' $DATA_PATH &&
        echo 'MINECRAFT_DATA_PATH:' $MINECRAFT_DATA_PATH &&
        echo 'DB_PATH:' $DB_PATH &&
        echo '================' &&
        ./server
      "
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      mc-image-pull:
        condition: service_completed_successfully

  # Service to ensure Minecraft image is pulled
  mc-image-pull:
    image: itzg/minecraft-server:latest
    command: echo "Minecraft server image pulled successfully"
    deploy:
      replicas: 0
    pull_policy: always

volumes:
  mboxmini-data: